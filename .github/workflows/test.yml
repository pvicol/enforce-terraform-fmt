name: Run tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: setup git
        run: |
          git config --global user.email "${{ github.actor }}"
          git config --global user.name "${{ github.actor }}"

      # Test: failure when no terraform version is specified
      - name: Test failure on no terraform version
        id: fail_no_version
        uses: ./
        continue-on-error: true

      - name: Check if failure occurred for missing terraform version
        if: steps.fail_no_version.outcome == 'failure'
        run: exit 1

      # Test: failure for invalid terraform version
      - name: Test failure on invalid terraform version
        id: fail_invalid_version
        uses: ./
        continue-on-error: true
        with:
          terraform_version: asdf

      - name: Check if failure occurred for invalid terraform version
        if: steps.fail_invalid_version.outcome == 'failure'
        run: exit 1

      # Test: failure for a missing terraform version
      - name: Test failure on missing terraform version
        id: fail_missing_version
        uses: ./
        continue-on-error: true
        with:
          terraform_version: 999.999.999

      - name: Check if failure occurred for missing terraform version
        if: steps.fail_missing_version.outcome == 'failure'
        run: exit 1

      # Modify files and commit
      - name: Modify test.tf for failure scenario
        run: echo "" >> test.tf

      - name: Commit modified test.tf
        run: git add . && git commit -m "modify test.tf for test"

      # Test formatting with the modified files
      - name: Test formatting failure
        id: failure_step
        uses: ./
        with:
          terraform_version: 0.14.6
        continue-on-error: true

      - name: Check if formatting failed
        if: steps.failure_step.outcome == 'failure'
        run: exit 1

      - name: Commit formatted files
        run: git add . && git commit -m "format test.tf"

      # Final test to ensure success after formatting
      - name: Test success after formatting
        uses: ./
        with:
          terraform_version: 0.14.6

  check_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check if tag already exists
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/* && git rev-parse "$(cat VERSION)" >/dev/null 2>&1 && exit 1 || exit 0
