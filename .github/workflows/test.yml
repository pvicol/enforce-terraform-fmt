name: Run tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
      # Check out full depth to compare file changes between commits
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git to allow to commit files in steps
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"

      # Expect a failure when terraform_version is not passed
      - name: "Test: Terraform version input omitted"
        id: fail_no_version
        continue-on-error: true
        uses: ./
      - name: "Assert Failed: Terraform version input omitted"
        if: steps.fail_no_version.outcome != 'failure'
        run: exit 1

      # Raise failure when Terraform version is not valid
      - name: "Test: Invalid Terraform version"
        id: fail_invalid_version
        continue-on-error: true
        uses: ./
        with:
          terraform_version: asdf
      - name: "Assert Failed: Invalid Terraform version"
        if: steps.fail_invalid_version.outcome != 'failure'
        run: exit 1

      # Raise failure when a non-existent Terraform version is passed
      - name: "Test: Missing (non-existent) Terraform version"
        id: fail_missing_version
        continue-on-error: true
        uses: ./
        with:
          terraform_version: 999.999.999
      - name: "Assert Failed: Missing (non-existent) Terraform version"
        if: steps.fail_missing_version.outcome != 'failure'
        run: exit 1

      - name: "Modify files to introduce a formatting issue - With Token Part 1"
        run: |
          sed -i '2s/[[:space:]]//g' example/test.tf
          sed -i '2s/[[:space:]]//g' test.tf
          echo '    resource "random_pet" "test" {length=5        }' > example/pets.tf
          echo "      " >> example/this-file-is-ignored.json
          git add . 
          git commit -m "Running tests with token - part 1"
      - name: "Test: Non-formatted Terraform file - With Token Part 1"
        id: failure_step_w_token
        continue-on-error: true
        uses: ./
        with:
          terraform_version: 1.9.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Assert Failed: Non-formatted Terraform file - With Token Part 2"
        if: steps.failure_step_w_token.outcome != 'failure'
        run: exit 1

      - name: "Commit formatted file to simulate a successful run - With Token Part 2"
        run: |
          git add . 
          git commit -m "Running tests with token - part 2"
      - name: "Test: All files formatted correctly - post comment"
        id: success_step_w_token
        uses: ./
        with:
          terraform_version: 1.9.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Assert Failed: Test: All files formatted correctly - post comment"
        if: steps.success_step_w_token.outcome != 'failure'
        run: exit 1

      # Print message to console when GitHub Token is not passed
      - name: "Modify files to introduce a formatting issue - W/O Token Part 1"
        run: |
          sed -i '2s/[[:space:]]//g' example/test.tf
          echo '    resource "random_pet" "test" {length=5        }' > example/pets.tf
          echo "      " >> example/this-file-is-ignored.json
          echo "this text file will be ignored by terraform_fmt" > example/this-file-is-ignored.txt
          rm test.tf
          git add . 
          git commit -m "Running tests w/o token - part 1"
      - name: "Test: Non-formatted Terraform file - print to console"
        id: failure_step_wo_token
        uses: ./
        with:
          terraform_version: 1.9.8
        continue-on-error: true
      - name: "Assert Failed: Non-formatted Terraform file - print to console"
        if: steps.failure_step_wo_token.outcome != 'failure'
        run: exit 1
      - name: "Commit formatted file to simulate a successful run - W/O Token Part 2"
        run: |
          git add . 
          git commit -m "Running tests w/o token - part 2"
      - name: "Test: All files formatted correctly - print to console"
        id: success_step_wo_token
        uses: ./
        with:
          terraform_version: 1.9.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Assert Failed: All files formatted correctly - print to console"
        if: steps.success_step_wo_token.outcome != 'failure'
        run: exit 1

  check_version:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check if tag already exists
        run: |
          git fetch --tags
          TAG=$(cat VERSION)
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists."
            exit 1
          fi
